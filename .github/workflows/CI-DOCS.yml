---
name: CI-DOCS
# Continuous Integration workflow for Testing Documentation Building.
#
# Jobs included:
# - DOCS: Builds and lints documentation
#
# Required Secrets:
# - DOCS_BUILD_REF: Automatic

permissions: {}

on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main", "master", "stable"]
    tags: ["v*"]
  pull_request:
    types: [opened, reopened, ready_for_review]
    branches: ["feature-*", "patch-*", "HOTFIX-*"]
  pull_request_target:
    types: [opened, edited, reopened, ready_for_review]
    branches: ["main", "master", "stable"]

jobs:
  DOCS:
    permissions:
      actions: read
      contents: read
      statuses: write
      packages: none
      pull-requests: read
      security-events: none
    environment: ${{ (github.ref == 'refs/heads/stable' || startsWith(github.ref, 'refs/tags/v')) && 'Deployment' || (github.ref == 'refs/heads/master') && 'Testing' || 'Experimenting' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      LANG: "en_US.utf-8"
      LC_CTYPE: "en_US.utf-8"
      DOCS_BUILD_REF: ${{ github.sha }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Fix braindead windows ${{ matrix.python-version }} on ${{ matrix.os }}
        if: ${{ !cancelled() && runner.os == 'Windows' }}
        run: python -m pip install --upgrade pip
      - name: Install dependencies for python ${{ matrix.python-version }} on ${{ matrix.os }}
        run: |
          pip install --upgrade "pip>=24.3.1" "setuptools>=75.0" "wheel>=0.44" "build>=1.2.1";
          pip install -r ./requirements.txt ;
          pip install -r ./tests/requirements.txt || true ;
      - name: Pre-Clean
        id: clean-prep
        run: make -j1 -f Makefile clean ;
      - name: Pre-build for Python ${{ matrix.python-version }} on ${{ matrix.os }}
        run: make -j1 -f Makefile build ;
        if: ${{ success() }}
      - name: Generate documentation with py${{ matrix.python-version }} on ${{ matrix.os }}
        run: make -j1 -f Makefile build-docs 2>&1 >> $GITHUB_STEP_SUMMARY ;
        if: ${{ !cancelled() }}
      - name: Lint documentation
        run: |
          pip install --upgrade sphinx-lint
          sphinx-lint docs/ 2>&1 >> $GITHUB_STEP_SUMMARY || true ;
        if: ${{ !cancelled() }}
      - name: Upload Docs Artifact with Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: Multicast-Documentation-${{ github.sha }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./docs/www/
          if-no-files-found: ignore
      - name: Post-purge
        id: post-uninstall
        run: make -j1 -f Makefile purge || true ;
        if: ${{ !cancelled() }}
      - name: Post-Clean
        id: post-end
        run: make -j1 -f Makefile clean || true ;
        if: ${{ !cancelled() }}
