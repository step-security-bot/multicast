---
name: CI-MATs
# Continuous Integration workflow for Minimal Acceptance Tests.
#
# Jobs included:
# - MATS: Runs Machine Acceptance Tests
#
# Required Secrets:
# NONE

on:  # yamllint disable-line rule:truthy
  workflow_run:
    workflows: ["CI-BUILD"]
    types:
      - completed

# Declare default permissions as none.
permissions: {}

jobs:
  check_build:
    permissions:
      actions: read
      pull-requests: read
      checks: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      build_environment: ${{ steps.get_env.outputs.environment }}
    steps:
      - id: check
        run: |
          if [[ "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
      - id: get_env
        run: |
          ENV_VALUE=$(gh api "${{ github.event.workflow_run.artifacts_url }}" --jq '.environment')
          if [[ -n "$ENV_VALUE" ]]; then
            echo "environment=$ENV_VALUE" >> $GITHUB_OUTPUT
          else
            echo "environment=Experimenting" >> $GITHUB_OUTPUT  # Default fallback
          fi

  MATS:
    permissions:
      actions: read
      contents: read
      statuses: write
    needs: check_build
    if: ${{ !cancelled() && (needs.check_build.outputs.should_run == 'true') }}
    runs-on: ubuntu-latest
    environment: ${{ needs.check_build.outputs.build_environment }}
    defaults:
      run:
        shell: bash
    timeout-minutes: 8
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    outputs:
      mats_status: ${{ steps.tests.outcome }}
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      LANG: "en_US.utf-8"
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies for ${{ matrix.python-version }}
        run: |
          pip install --upgrade "pip>=24.3.1" "setuptools>=75.0" "wheel>=0.44" "build>=1.2.1";
          pip install -r ./requirements.txt ;
          pip install -r ./tests/requirements.txt || true ;
          pip install --upgrade -r ./docs/requirements.txt || true ;
      - name: Pre-Clean
        id: clean
        run: make -j1 -f Makefile clean || true ;
      - name: Run Tests for python ${{ matrix.python-version }}
        id: tests
        run: make -j1 -f Makefile test ;
      - name: Summerize MATs for python ${{ matrix.python-version }}
        id: sumerize-mats
        run: |
          echo "- MATS works on python version ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        if: ${{ success() }}
      - name: Post-Clean
        id: post
        run: make -j1 -f Makefile clean || true ;
        if: ${{ always() }}

  MATS_STATUS:
    permissions:
      actions: read
    needs: [check_build, MATS]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    outputs:
      passedMATs: ${{ steps.check_status.outputs.mats_success }}
      didBUILD: ${{ needs.check_build.outputs.should_run }}
    steps:
      - id: check_status
        run: |
          if [[ "${{ needs.MATS.result }}" == "success" ]]; then
            echo "mats_success=true" >> $GITHUB_OUTPUT
          else
            echo "mats_success=false" >> $GITHUB_OUTPUT
          fi
